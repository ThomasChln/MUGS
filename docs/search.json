[{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CodeEff_Matrix Example","text":"CodeEff_Matrix function estimates code effects using left right embeddings source target sites. vignette demonstrates use function example data provided package.","code":""},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"CodeEff_Matrix Example","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the Data","title":"CodeEff_Matrix Example","text":"Load required datasets example:","code":"# Load required data data(S.1) data(S.2) data(U.1) data(U.2) data(X.group.source) data(X.group.target)"},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"prepare-variables","dir":"Articles","previous_headings":"","what":"Prepare Variables","title":"CodeEff_Matrix Example","text":"Prepare variables required CodeEff_Matrix function:","code":"# Extract names and find common codes names.list.1 <- rownames(S.1) names.list.2 <- rownames(S.2) common_codes <- intersect(names.list.1, names.list.2) full.name.list <- c(names.list.1, names.list.2)  # Create the initial estimator matrix zeta.int <- matrix(0, 4000, 10)  # Replace with appropriate dimensions rownames(zeta.int) <- full.name.list"},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"run-the-function","dir":"Articles","previous_headings":"","what":"Run the Function","title":"CodeEff_Matrix Example","text":"Run CodeEff_Matrix function:","code":"# Estimate code effects CodeEff_Matrix.out <- CodeEff_Matrix(   S.1 = S.1,   S.2 = S.2,    n1 = 2000,    n2 = 2000,    U.1 = U.1,    U.2 = U.2,    V.1 = U.1,    V.2 = U.2,    common_codes = common_codes,    zeta.int = zeta.int,    lambda = 10,    p = 10 )"},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"CodeEff_Matrix Example","text":"Explore structure key components output:","code":"# View structure of the output str(CodeEff_Matrix.out) #> List of 4 #>  $ zeta   : num [1:4000, 1:10] -7.228 2.687 -2.724 -0.788 3.593 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4000] \"code:1\" \"code:2\" \"code:3\" \"code:4\" ... #>   .. ..$ : NULL #>  $ dif_F  : num 50 #>  $ V.1.new: num [1:2000, 1:10] -7.569 2.831 -2.818 -0.814 3.777 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"code:1\" \"code:2\" \"code:3\" \"code:4\" ... #>   .. ..$ : NULL #>  $ V.2.new: num [1:2000, 1:10] 11.75 14.11 -4.92 -10.88 -13.9 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"code:1001\" \"code:1002\" \"code:1003\" \"code:1004\" ... #>   .. ..$ : NULL # Print specific components of the result cat(\"\\nEstimated Code Effects (zeta):\\n\") #>  #> Estimated Code Effects (zeta): print(CodeEff_Matrix.out$zeta[1:5, 1:3])  # Show the first 5 rows and 3 columns of zeta #>              [,1]        [,2]       [,3] #> code:1 -7.2282856  2.68057655  4.0679679 #> code:2  2.6868370 -2.77701996 -0.2714358 #> code:3 -2.7235616 -4.34907679 -3.6425147 #> code:4 -0.7883573 -0.08617556  2.2048065 #> code:5  3.5932316  2.32022527  1.4901541 cat(\"\\nFrobenius Norm Difference (dif_F):\\n\") #>  #> Frobenius Norm Difference (dif_F): print(CodeEff_Matrix.out$dif_F) #> [1] 50.0446 cat(\"\\nUpdated Right Embeddings for Source Site (V.1.new):\\n\") #>  #> Updated Right Embeddings for Source Site (V.1.new): print(CodeEff_Matrix.out$V.1.new[1:5, 1:3])  # Show first 5 rows and 3 columns of V.1.new #>              [,1]        [,2]       [,3] #> code:1 -7.5694752  2.84253618  4.2534926 #> code:2  2.8307836 -2.90516355 -0.3131111 #> code:3 -2.8177723 -4.55248003 -3.8320463 #> code:4 -0.8139894 -0.07198545  2.3002889 #> code:5  3.7769594  2.44711826  1.5804564 cat(\"\\nUpdated Right Embeddings for Target Site (V.2.new):\\n\") #>  #> Updated Right Embeddings for Target Site (V.2.new): print(CodeEff_Matrix.out$V.2.new[1:5, 1:3])  # Show first 5 rows and 3 columns of V.2.new #>                 [,1]       [,2]      [,3] #> code:1001  11.749029 -11.572740  1.768665 #> code:1002  14.112210 -11.036948  3.941473 #> code:1003  -4.923948   2.060506 -1.909636 #> code:1004 -10.880713   1.062336 -7.044401 #> code:1005 -13.899009   6.309230  8.543631"},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"CodeEff_Matrix Example","text":"Custom Parameters: Modify parameters like n1, n2, p, lambda test different scenarios. Data Preparation: Ensure datasets (S.1, S.2, U.1, U.2, etc.) correctly loaded aligned. Output: Key components include estimated zeta matrix, Frobenius norm difference, updated embeddings.","code":""},{"path":"https://github.com/celehs/MUGS/articles/CodeEff_Matrix_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"CodeEff_Matrix Example","text":"vignette demonstrated use CodeEff_Matrix function estimating code effects. Adjust input parameters datasets test different scenarios interpret output components analysis.","code":""},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CodeSiteEff_I2_par Example","text":"CodeSiteEff_I2_par function estimates site-specific effects using input embeddings penalization methods. vignette demonstrates utilize function appropriate input data parameters.","code":""},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"CodeSiteEff_I2_par Example","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the Data","title":"CodeSiteEff_I2_par Example","text":"Load required datasets example:","code":"# Load required data data(S.1) data(S.2) data(X.group.source) data(X.group.target) data(U.1) data(U.2)"},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"prepare-variables","dir":"Articles","previous_headings":"","what":"Prepare Variables","title":"CodeSiteEff_I2_par Example","text":"Set variables required CodeSiteEff_I2_par function:","code":"# Extract names and find common codes names.list.1 <- rownames(S.1) names.list.2 <- rownames(S.2) common_codes <- intersect(names.list.1, names.list.2) full.name.list <- c(names.list.1, names.list.2)  # Create the initial delta matrix delta.int <- matrix(0, 4000, 10)  # Adjust dimensions as needed rownames(delta.int) <- full.name.list"},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"run-the-function","dir":"Articles","previous_headings":"","what":"Run the Function","title":"CodeSiteEff_I2_par Example","text":"Run CodeSiteEff_I2_par function:","code":"# Estimate site-specific effects CodeSiteEff_l2_par.out <- CodeSiteEff_l2_par(   S.1 = S.1,    S.2 = S.2,    n1 = 2000,    n2 = 2000,    U.1 = U.1,    U.2 = U.2,    V.1 = U.1,    V.2 = U.2,    delta.int = delta.int,    lambda.delta = 1000,    p = 10,    common_codes = common_codes,    n.common = 1000,    n.core = 2 )"},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"CodeSiteEff_I2_par Example","text":"Explore structure key components output:","code":"# View structure of the output str(CodeSiteEff_l2_par.out) #> List of 3 #>  $ delta  : num [1:4000, 1:10] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4000] \"code:1\" \"code:2\" \"code:3\" \"code:4\" ... #>   .. ..$ : NULL #>  $ V.1.new: num [1:2000, 1:10] -0.3412 0.1439 -0.0942 -0.0256 0.1837 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"code:1\" \"code:2\" \"code:3\" \"code:4\" ... #>   .. ..$ : NULL #>  $ V.2.new: num [1:2000, 1:10] 25.78 20.74 -6.55 -10.53 -20.51 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"code:1001\" \"code:1002\" \"code:1003\" \"code:1004\" ... #>   .. ..$ : NULL # Print specific components of the result cat(\"\\nEstimated Effects (Delta):\\n\") #>  #> Estimated Effects (Delta): print(CodeSiteEff_l2_par.out$delta[1:5, 1:5])  # First 5 rows and columns of delta matrix #>        [,1] [,2] [,3] [,4] [,5] #> code:1    0    0    0    0    0 #> code:2    0    0    0    0    0 #> code:3    0    0    0    0    0 #> code:4    0    0    0    0    0 #> code:5    0    0    0    0    0 cat(\"\\nRegularization Path:\\n\") #>  #> Regularization Path: print(CodeSiteEff_l2_par.out$path) #> NULL"},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"CodeSiteEff_I2_par Example","text":"Custom Parameters: Modify parameters like n1, n2, p, lambda.delta test different scenarios. Data Preparation: Ensure datasets (S.1, S.2, U.1, U.2, etc.) correctly loaded aligned. Output: Key components include estimated delta matrix regularization path.","code":""},{"path":"https://github.com/celehs/MUGS/articles/CodeSiteEff_I2_par_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"CodeSiteEff_I2_par Example","text":"vignette demonstrated use CodeSiteEff_l2_par function estimating site-specific effects. Adjust input parameters datasets test different scenarios interpret output components analysis.","code":""},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DataGen_rare_group Example","text":"DataGen_rare_group function generates synthetic data rare group analysis, simulating structured datasets testing validating algorithms. vignette demonstrates use DataGen_rare_group example inputs.","code":""},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"DataGen_rare_group Example","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"generate-synthetic-data","dir":"Articles","previous_headings":"","what":"Generate Synthetic Data","title":"DataGen_rare_group Example","text":"Run DataGen_rare_group function generate synthetic dataset:","code":"# Generate data DataGen.out <- DataGen_rare_group(   seed = 1,    p = 100,    n1 = 2000,    n2 = 2000,    n.common = 1000,    n.group = 400,    sigma.eps.1 = 5,    sigma.eps.2 = 20,    sigma.rare = 80,    ratio.delta = 0.05,    network.k = 50,    rho.beta = 0.4,    rho.U0 = 0.4,    rho.delta = 0.95,     n.rare = 700,    group.size = 5 ) #> Warning: package 'MASS' was built under R version 4.4.1 #> Warning: package 'fastDummies' was built under R version 4.4.1 #> Warning: package 'rsvd' was built under R version 4.4.1 #> Warning: package 'Rcpp' was built under R version 4.4.2 #> Warning: package 'inline' was built under R version 4.4.2 #>  #> Attaching package: 'inline' #> The following object is masked from 'package:Rcpp': #>  #>     registerPlugin #>  >> setting environment variables:  #> PKG_LIBS = $(SHLIB_OPENMP_CFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) #> PKG_CPPFLAGS = -I../inst/include $(SHLIB_OPENMP_CFLAGS) #>  #>  >> LinkingTo : RcppArmadillo, Rcpp #> CLINK_CPPFLAGS =  -I\"F:/R-4.4.0/library/RcppArmadillo/include\" -I\"F:/R-4.4.0/library/Rcpp/include\"  #>  #>  >> Program source : #>  #>    1 :  #>    2 : // includes from the plugin #>    3 : #include <RcppArmadillo.h> #>    4 : #include <Rcpp.h> #>    5 :  #>    6 :  #>    7 : #ifndef BEGIN_RCPP #>    8 : #define BEGIN_RCPP #>    9 : #endif #>   10 :  #>   11 : #ifndef END_RCPP #>   12 : #define END_RCPP #>   13 : #endif #>   14 :  #>   15 : using namespace Rcpp; #>   16 :  #>   17 : // user includes #>   18 :  #>   19 :  #>   20 : // declarations #>   21 : extern \"C\" { #>   22 : SEXP file173061c32b2f( SEXP n_, SEXP mu_, SEXP sigma_) ; #>   23 : } #>   24 :  #>   25 : // definition #>   26 : SEXP file173061c32b2f(SEXP n_, SEXP mu_, SEXP sigma_) { #>   27 : BEGIN_RCPP #>   28 :  #>   29 :   using namespace Rcpp; #>   30 :   int n = as<int>(n_); #>   31 :   arma::vec mu = as<arma::vec>(mu_); #>   32 :   arma::mat sigma = as<arma::mat>(sigma_); #>   33 :   int ncols = sigma.n_cols; // Corrected syntax #>   34 :   arma::mat Y = arma::randn(n, ncols); #>   35 :   return wrap(arma::repmat(mu, 1, n).t() + Y * arma::chol(sigma)); #>   36 :    #>   37 : END_RCPP #>   38 : }"},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"DataGen_rare_group Example","text":"Explore structure key components generated dataset:","code":"# View structure of the output str(DataGen.out) #> List of 12 #>  $ delta1        : num [1:2000, 1:100] 0 0 0 0 0 0 0 0 0 0 ... #>  $ delta2        : num [1:2000, 1:100] 0.878 0 0 0 0 ... #>  $ u.1           : num [1:2000, 1:100] -0.745 -0.364 0.201 -1.642 0.574 ... #>  $ u.2           : num [1:2000, 1:100] 0.627 -2.001 0.382 0.708 0.6 ... #>  $ S.1           : num [1:2000, 1:2000] 105.58 43.36 3.36 -9.81 15.37 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"1\" \"2\" \"3\" \"4\" ... #>   .. ..$ : chr [1:2000] \"1\" \"2\" \"3\" \"4\" ... #>  $ S.2           : num [1:2000, 1:2000] 209.124 48.759 60.153 -22.569 0.363 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"1001\" \"1002\" \"1003\" \"1004\" ... #>   .. ..$ : chr [1:2000] \"1001\" \"1002\" \"1003\" \"1004\" ... #>  $ S.1.0         : num [1:2000, 1:2000] 108.71 47.8 9.03 -6.72 14.05 ... #>  $ S.2.0         : num [1:2000, 1:2000] 196.9 15.6 11.3 11.4 20.8 ... #>  $ X.group.source: num [1:2000, 1:400] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"1\" \"2\" \"3\" \"4\" ... #>   .. ..$ : chr [1:400] \".data_1\" \".data_2\" \".data_3\" \".data_4\" ... #>  $ X.group.target: num [1:2000, 1:400] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:2000] \"1001\" \"1002\" \"1003\" \"1004\" ... #>   .. ..$ : chr [1:400] \".data_1\" \".data_2\" \".data_3\" \".data_4\" ... #>  $ pairs.rel.CV  :'data.frame':  8669 obs. of  3 variables: #>   ..$ row : chr [1:8669] \"967\" \"2325\" \"1255\" \"556\" ... #>   ..$ col : chr [1:8669] \"2167\" \"2328\" \"1258\" \"557\" ... #>   ..$ type: chr [1:8669] \"related\" \"related\" \"related\" \"related\" ... #>  $ pairs.rel.EV  :'data.frame':  12169 obs. of  3 variables: #>   ..$ row : chr [1:12169] \"2197\" \"1109\" \"2522\" \"1551\" ... #>   ..$ col : chr [1:12169] \"2201\" \"1909\" \"2526\" \"1553\" ... #>   ..$ type: chr [1:12169] \"related\" \"related\" \"related\" \"related\" ... # Print the first few rows and columns of the S.1 matrix cat(\"\\nFirst 5 rows and columns of S.1:\\n\") #>  #> First 5 rows and columns of S.1: print(DataGen.out$S.1[1:5, 1:5]) #>            1         2         3         4         5 #> 1 105.580934 43.364453  3.361235 -9.810005 15.368810 #> 2  43.364453 88.723675 37.230356  8.684597 12.845912 #> 3   3.361235 37.230356 96.011024 17.494887  5.660973 #> 4  -9.810005  8.684597 17.494887 82.291532 33.665230 #> 5  15.368810 12.845912  5.660973 33.665230 89.936481 # Print the first few rows and columns of the S.2 matrix cat(\"\\nFirst 5 rows and columns of S.2:\\n\") #>  #> First 5 rows and columns of S.2: print(DataGen.out$S.2[1:5, 1:5]) #>             1001       1002       1003      1004        1005 #> 1001 209.1239804   48.75914   60.15316 -22.56948   0.3631436 #> 1002  48.7591430  237.38368 -105.99344 -13.30921 -19.3541151 #> 1003  60.1531614 -105.99344   18.10273 -26.07657 -72.4044181 #> 1004 -22.5694782  -13.30921  -26.07657 218.05846  30.5658570 #> 1005   0.3631436  -19.35412  -72.40442  30.56586  70.7431699"},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"DataGen_rare_group Example","text":"Custom Parameters: Modify parameters like p, n1, n2, n.group, others test different scenarios. Reproducibility: seed parameter ensures reproducibility results. Applications: Use generated data testing rare group detection algorithms performance benchmarking.","code":""},{"path":"https://github.com/celehs/MUGS/articles/DataGen_rare_group_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"DataGen_rare_group Example","text":"vignette demonstrated use DataGen_rare_group function simulate structured data rare group analysis. Adjust input parameters suit specific use cases experimental setups. details, refer package documentation.","code":""},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Evaluation Simulation Usage","text":"evaluation_sim function used evaluate performance group effect estimation algorithms simulated conditions. vignette demonstrates use evaluation_sim function example data provided package.","code":""},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"Evaluation Simulation Usage","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load Example Data","title":"Evaluation Simulation Usage","text":"Load example data required evaluation_sim function:","code":"data(pairs.rel.EV) data(U.2)"},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"run-the-evaluation-simulation","dir":"Articles","previous_headings":"","what":"Run the Evaluation Simulation","title":"Evaluation Simulation Usage","text":"Run evaluation_sim function evaluate performance based provided data:","code":"# Evaluate simulation evaluation_results <- evaluation.sim(pairs.rel.EV, U.2) #> Warning: package 'dplyr' was built under R version 4.4.1 #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #> Warning: package 'pROC' was built under R version 4.4.1 #> Type 'citation(\"pROC\")' for a citation. #>  #> Attaching package: 'pROC' #> The following objects are masked from 'package:stats': #>  #>     cov, smooth, var #> Setting levels: control = 0, case = 1 #> Setting direction: controls < cases"},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"Evaluation Simulation Usage","text":"Explore structure key components output:","code":"# View the structure of the output str(evaluation_results) #> List of 2 #>  $ n.rel  : int 7899 #>  $ AUC.rel: 'auc' num 0.749 #>   ..- attr(*, \"partial.auc\")= logi FALSE #>   ..- attr(*, \"percent\")= logi FALSE #>   ..- attr(*, \"roc\")=List of 15 #>   .. ..$ percent           : logi FALSE #>   .. ..$ sensitivities     : num [1:15613] 1 1 1 1 1 ... #>   .. ..$ specificities     : num [1:15613] 0 0 0.000127 0.000253 0.00038 ... #>   .. ..$ thresholds        : num [1:15613] -Inf -1.92 -1.86 -1.82 -1.79 ... #>   .. ..$ direction         : chr \"<\" #>   .. ..$ cases             : num [1:7899] 0.0609 0.2636 -0.0754 -0.264 0.0933 ... #>   .. ..$ controls          : num [1:7899] 0.1243 -0.6568 0.8806 0.099 -0.0947 ... #>   .. ..$ fun.sesp          :function (thresholds, controls, cases, direction)   #>   .. ..$ auc               : 'auc' num 0.749 #>   .. .. ..- attr(*, \"partial.auc\")= logi FALSE #>   .. .. ..- attr(*, \"percent\")= logi FALSE #>   .. .. ..- attr(*, \"roc\")=List of 8 #>   .. .. .. ..$ percent      : logi FALSE #>   .. .. .. ..$ sensitivities: num [1:15613] 1 1 1 1 1 ... #>   .. .. .. ..$ specificities: num [1:15613] 0 0 0.000127 0.000253 0.00038 ... #>   .. .. .. ..$ thresholds   : num [1:15613] -Inf -1.92 -1.86 -1.82 -1.79 ... #>   .. .. .. ..$ direction    : chr \"<\" #>   .. .. .. ..$ cases        : num [1:7899] 0.0609 0.2636 -0.0754 -0.264 0.0933 ... #>   .. .. .. ..$ controls     : num [1:7899] 0.1243 -0.6568 0.8806 0.099 -0.0947 ... #>   .. .. .. ..$ fun.sesp     :function (thresholds, controls, cases, direction)   #>   .. .. .. ..- attr(*, \"class\")= chr \"roc\" #>   .. ..$ call              : language roc.default(response = response, predictor = predictor, auc = TRUE) #>   .. ..$ original.predictor: num [1:15798] 0.0609 0.2636 -0.0754 -0.264 0.0933 ... #>   .. ..$ original.response : num [1:15798] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ predictor         : num [1:15798] 0.0609 0.2636 -0.0754 -0.264 0.0933 ... #>   .. ..$ response          : num [1:15798] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ levels            : chr [1:2] \"0\" \"1\" #>   .. ..- attr(*, \"class\")= chr \"roc\" # Display first few rows of the results cat(\"\\nEvaluation Results (first 5 rows):\\n\") #>  #> Evaluation Results (first 5 rows): print(head(evaluation_results, 5)) #> $n.rel #> [1] 7899 #>  #> $AUC.rel #> Area under the curve: 0.749"},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Evaluation Simulation Usage","text":"Input Data: Ensure pairs.rel.EV U.2 properly formatted loaded running function. Output Structure: output typically includes evaluation metrics processed results analysis.","code":""},{"path":"https://github.com/celehs/MUGS/articles/Evaluation_sim_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Evaluation Simulation Usage","text":"vignette demonstrated use evaluation_sim function evaluating group effect estimation. Customize input data analyze output assess performance algorithms.","code":""},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"get_embed Usage","text":"get_embed function retrieves embeddings based provided input data. vignette demonstrates usage get_embed function example datasets included MUGS package.","code":""},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"get_embed Usage","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load Example Data","title":"get_embed Usage","text":"Load example datasets get_embed function:","code":"set.seed(1) S <- matrix(rnorm(100^2), 100, 100) library(rsvd) #> Warning: package 'rsvd' was built under R version 4.4.1 svd <- rsvd(S, 20)"},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"run-the-get_embed-function","dir":"Articles","previous_headings":"","what":"Run the get_embed Function","title":"get_embed Usage","text":"Run get_embed function extract embeddings data:","code":"# Example usage of get_embed U <- get_embed(svd, d=10, normalize=TRUE)"},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"get_embed Usage","text":"Explore structure key components output:","code":"# View the structure of the output str(U) #>  num [1:100, 1:10] -5.65e-01 -6.38e-01 3.79e-01 3.06e-01 -5.82e-05 ... # Display the first few rows of the results cat(\"\\nEmbedding Results (first 5 rows):\\n\") #>  #> Embedding Results (first 5 rows): print(head(U, 5)) #>               [,1]        [,2]       [,3]        [,4]        [,5]         [,6] #> [1,] -5.647594e-01  0.09626616 -0.5793501 -0.10084797  0.13928182 -0.377441496 #> [2,] -6.384830e-01 -0.29585454 -0.3236334 -0.39702952 -0.17937683 -0.229562372 #> [3,]  3.786506e-01 -0.21009859 -0.2831174  0.39243036  0.02058818  0.075576728 #> [4,]  3.060991e-01 -0.26686624 -0.2882164 -0.56902082 -0.06900927 -0.003753071 #> [5,] -5.819784e-05 -0.53728680  0.3493060  0.03360345  0.12269969  0.513945126 #>             [,7]       [,8]        [,9]       [,10] #> [1,]  0.01630144 -0.2049133 -0.17183344  0.30384089 #> [2,]  0.28273084  0.2719569  0.03996107  0.04549094 #> [3,] -0.61570868  0.3135361  0.27342339  0.14151726 #> [4,]  0.32838411  0.2242880 -0.50550587 -0.09888660 #> [5,]  0.08446232  0.3807319 -0.36149449  0.16191136"},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"get_embed Usage","text":"Input Data: Ensure U.1 S.1 properly formatted matrices data frames. Output Structure: output contains embeddings derived input data, can used downstream analysis.","code":""},{"path":"https://github.com/celehs/MUGS/articles/get_embed_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"get_embed Usage","text":"vignette demonstrated use get_embed function retrieve embeddings input data. Use function process data extract meaningful embeddings applications.","code":""},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GroupEff_par Usage","text":"GroupEff_par function estimates group effects using embeddings structured input data. vignette demonstrates usage GroupEff_par function example data included package.","code":""},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"load-the-required-library","dir":"Articles","previous_headings":"","what":"Load the Required Library","title":"GroupEff_par Usage","text":"Ensure MUGS package loaded running example:","code":"library(MUGS)"},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the Data","title":"GroupEff_par Usage","text":"Load required datasets example:","code":"# Load required data data(S.1) data(S.2) data(X.group.source) data(X.group.target) data(U.1) data(U.2)"},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"prepare-variables","dir":"Articles","previous_headings":"","what":"Prepare Variables","title":"GroupEff_par Usage","text":"Prepare variables required GroupEff_par function:","code":"# Extract names and create name lists names.list.1 <- rownames(S.1) names.list.2 <- rownames(S.2) full.name.list <- c(names.list.1, names.list.2)  # Initialize beta matrix beta.names.1 <- unique(c(colnames(X.group.source), colnames(X.group.target))) beta.int <- matrix(0, 400, 10)  # Replace with appropriate dimensions rownames(beta.int) <- beta.names.1"},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"run-the-function","dir":"Articles","previous_headings":"","what":"Run the Function","title":"GroupEff_par Usage","text":"Run GroupEff_par function:","code":"GroupEff_par.out <- GroupEff_par(     S.MGB = S.1,      S.BCH = S.2,      n.MGB = 2000,      n.BCH = 2000,      U.MGB = U.1,      U.BCH = U.2,      V.MGB = U.1,      V.BCH = U.2,      X.MGB.group = X.group.source,      X.BCH.group = X.group.target,     n.group = 400,      name.list = full.name.list,      beta.int = beta.int,      lambda = 0,      p = 10,      n.core = 2   )"},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"examine-the-output","dir":"Articles","previous_headings":"","what":"Examine the Output","title":"GroupEff_par Usage","text":"Explore structure key components output:","code":"# View structure of the output str(GroupEff_par.out)  # Print specific components of the result cat(\"\\nEstimated Group Effects:\\n\") print(GroupEff_par.out$effects[1:5, 1:3])  # Show the first 5 rows and 3 columns of effects  cat(\"\\nRegularization Path:\\n\") print(GroupEff_par.out$path)"},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"GroupEff_par Usage","text":"Custom Parameters: Modify parameters like n.MGB, n.BCH, p, lambda test different scenarios. Data Preparation: Ensure datasets (S.1, S.2, U.1, U.2, etc.) correctly loaded aligned. Output: Key components include estimated group effects matrix regularization path.","code":""},{"path":"https://github.com/celehs/MUGS/articles/GroupEff_par_usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"GroupEff_par Usage","text":"vignette demonstrated use GroupEff_par function estimating group effects. Adjust input parameters datasets test different scenarios interpret output components analysis.","code":""},{"path":"https://github.com/celehs/MUGS/articles/main-steps.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Multisource Graph Synthesis with EHR data","text":"Li, M., Li, X., Pan, K., Geva, ., Yang, D., Sweet, S. M., Bonzel, C.-L., Panickan, V. ., Xiong, X., Mandl, K., & Cai, T. (2024). Multisource representation learning pediatric knowledge extraction electronic health records. npj Digital Medicine. https://doi.org/10.1038/s41746-024-01320-4","code":""},{"path":"https://github.com/celehs/MUGS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mengyan mengyanli@bentley.edu Li. Maintainer, author. Xiaoou Li. Author. Tianxi Cai. Author. PARSE LTD software@parse-health.org. Maintainer, author. CELEHS. Author.","code":""},{"path":"https://github.com/celehs/MUGS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li Mm, Li X, Cai T, software@parse-health.org P, CELEHS (2024). MUGS: Multisource Graph Synthesis EHR data. R package version 0.1.0, https://celehs.github.io/MUGS/, https://github.com/celehs/MUGS.","code":"@Manual{,   title = {MUGS: Multisource Graph Synthesis with EHR data},   author = {Mengyan mengyanli@bentley.edu Li and Xiaoou Li and Tianxi Cai and PARSE LTD software@parse-health.org and {CELEHS}},   year = {2024},   note = {R package version 0.1.0, https://celehs.github.io/MUGS/},   url = {https://github.com/celehs/MUGS}, }"},{"path":"https://github.com/celehs/MUGS/index.html","id":"multisource-graph-synthesis-with-ehr-data","dir":"","previous_headings":"","what":"Multisource Graph Synthesis with EHR data","title":"Multisource Graph Synthesis with EHR data","text":"—– needs changed links","code":""},{"path":[]},{"path":"https://github.com/celehs/MUGS/index.html","id":"mugs","dir":"","previous_headings":"","what":"MUGS","title":"Multisource Graph Synthesis with EHR data","text":"develop MUlti-source Graph Synthesis (MUGS), algorithm designed create embeddings pediatric EHR codes leveraging graphical information three distinct sources: (1) pediatric EHR data, (2) EHR data general patient population, (3) existing hierarchical medical ontology knowledge shared across different patient populations. Utilizing existing hierarchical medical ontology prior general knowledge, MUGS facilitates efficient transfer learning grouping similar codes, thereby enhancing transferability knowledge general pediatric systems. address heterogeneity within code groups sites, propose decompose code embedding three components: group effect, defined based hierarchical medical ontology; site-nonspecific code effect, capturing characteristics code differ group effect shared health systems; code-site effect, identifying site-specific traits code. Importantly, decomposition, coupled penalty functions applied code code-site effects, provides adaptability varying degrees heterogeneity within code groups sites protects adverse effects negative knowledge transfer via hyperparameter tuning. Flowchart First, obtain two sets initial embeddings site using ‘get_embed’ function, align solving orthogonal procrustes problem. Second, utilize existing hierarchical medical ontology PheCodes, LOINC codes, RxNorms group similar codes (https://shiny.parse-health.org/hierarchies/), train initial embeddings group effects, code effects, code-site effects pooling two sets aligned embeddings. Third, commence core algorithm: updating group effects, code effects, code-site effects alternating iterative fashion. ‘GroupEff_par’ ‘CodeSiteEff_l2_par’ used update group effects code-site effects, respectively, utilizing parallel computations across multiple cores machines enhance speed. ‘CodeEff_Matrix’ used update code effects via matrix computations. hyperparameter tuning, leverage code-code pairs curated related literature. helps us select optimal tuning parameters associated penalties code effects code-site effects without need data splitting. performance different sets embeddings different tuning parameters evaluated using ‘evaluation.sim’. designed assess accuracy embeddings identifying established related pairs versus random pairs across wide range settings. Although share real data MGB BCH used generate MUGS embeddings, developed Shiny App (https://shiny.parse-health.org/multi-view-net/) support downstream tasks pediatric feature engineering, construction pediatric knowledge graphs, .","code":""},{"path":"https://github.com/celehs/MUGS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multisource Graph Synthesis with EHR data","text":"Install stable version CRAN: Install development version GitHub:","code":"install.packages(\"MUGS\") # install.packages(\"remotes\") remotes::install_github(\"celehs/MUGS\")"},{"path":"https://github.com/celehs/MUGS/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Multisource Graph Synthesis with EHR data","text":"Load simulated data (…) try R codes vignette [MUGS.Rmd] (…). use real EHR data, first convert data format simulated data. Detailed guidelines data formatting included MUGS.Rmd. formatted, call main function ‘MUGS’ data input.","code":""},{"path":"https://github.com/celehs/MUGS/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Multisource Graph Synthesis with EHR data","text":"Li, M., Li, X., Pan, K., Geva, ., Yang, D., Sweet, S. M., Bonzel, C.-L., Panickan, V. ., Xiong, X., Mandl, K., & Cai, T. (2024). Multisource representation learning pediatric knowledge extraction electronic health records. npj Digital Medicine. https://doi.org/10.1038/s41746-024-01320-4","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeEff_Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Used To Estimate Code Effects — CodeEff_Matrix","title":"Function Used To Estimate Code Effects — CodeEff_Matrix","text":"function estimates code effects using left right embeddings source target sites.","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeEff_Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Used To Estimate Code Effects — CodeEff_Matrix","text":"","code":"CodeEff_Matrix(   S.1,   S.2,   n1,   n2,   U.1,   U.2,   V.1,   V.2,   common_codes,   zeta.int,   lambda,   p )"},{"path":"https://github.com/celehs/MUGS/reference/CodeEff_Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Used To Estimate Code Effects — CodeEff_Matrix","text":"S.1 SPPMI source site. S.2 SPPMI target site. n1 number codes source site. n2 number codes target site. U.1 left embeddings left singular vectors times square root singular values source site. U.2 left embeddings left singular vectors times square root singular values target site. V.1 right embeddings right singular vectors times square root singular values source site. V.2 right embeddings right singular vectors times square root singular values target site. common_codes list overlapping codes. zeta.int initial estimator code effects. lambda tuning parameter controls intensity penalization code effect. p length embedding.","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeEff_Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function Used To Estimate Code Effects — CodeEff_Matrix","text":"list following elements: zeta estimated code effects. dif_F Frobenius norm difference updated initial estimators. V.1.new Updated right embeddings source site. V.2.new Updated right embeddings target site.","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeSiteEff_l2_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Used To Estimate Code-Site Effects Parallelly — CodeSiteEff_l2_par","title":"Function Used To Estimate Code-Site Effects Parallelly — CodeSiteEff_l2_par","text":"Function Used Estimate Code-Site Effects Parallelly","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeSiteEff_l2_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Used To Estimate Code-Site Effects Parallelly — CodeSiteEff_l2_par","text":"","code":"CodeSiteEff_l2_par(   S.1,   S.2,   n1,   n2,   U.1,   U.2,   V.1,   V.2,   delta.int,   lambda.delta,   p,   common_codes,   n.common,   n.core )"},{"path":"https://github.com/celehs/MUGS/reference/CodeSiteEff_l2_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Used To Estimate Code-Site Effects Parallelly — CodeSiteEff_l2_par","text":"S.1 SPPMI source site S.2 SPPMI target site n1 number codes source site n2 number codes target site U.1 left embeddings (left singular vectors times square root singular values) source site U.2 left embeddings (left singular vectors times square root singular values) target site V.1 right embeddings (right singular vectors times square root singular values) source site V.2 right embeddings (right singular vectors times square root singular values) target site delta.int initial estimator code-site effect lambda.delta tuning parameter controls intensity penalization code-site effects p length embedding common_codes list overlapping codes n.common number overlapping codes n.core number cored used parallel computation","code":""},{"path":"https://github.com/celehs/MUGS/reference/CodeSiteEff_l2_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function Used To Estimate Code-Site Effects Parallelly — CodeSiteEff_l2_par","text":"output estimation code-site effects","code":""},{"path":"https://github.com/celehs/MUGS/reference/DataGen_rare_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Function used to generate input data (used only for Simulations) Generate SPPMIs, dummy matrices based on prior group structures, and code-code pairs for tuning and evaluation — DataGen_rare_group","title":"Function used to generate input data (used only for Simulations) Generate SPPMIs, dummy matrices based on prior group structures, and code-code pairs for tuning and evaluation — DataGen_rare_group","text":"Function used generate input data (used Simulations) Generate SPPMIs, dummy matrices based prior group structures, code-code pairs tuning evaluation","code":""},{"path":"https://github.com/celehs/MUGS/reference/DataGen_rare_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function used to generate input data (used only for Simulations) Generate SPPMIs, dummy matrices based on prior group structures, and code-code pairs for tuning and evaluation — DataGen_rare_group","text":"","code":"DataGen_rare_group(   seed,   p,   n1,   n2,   n.common,   n.group,   sigma.eps.1,   sigma.eps.2,   ratio.delta,   network.k,   rho.beta,   rho.U0,   rho.delta,   sigma.rare,   n.rare,   group.size )"},{"path":"https://github.com/celehs/MUGS/reference/DataGen_rare_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function used to generate input data (used only for Simulations) Generate SPPMIs, dummy matrices based on prior group structures, and code-code pairs for tuning and evaluation — DataGen_rare_group","text":"seed reproducibility p length embedding n1 number codes site 1 n2 number codes site 2 n.common common: number overlapping codes n.group number groups sigma.eps.1 sd error site 1 sigma.eps.2 sd error site 2 ratio.delta proportion codes site site-specific effects applied network.k number distinct blocks within site unique inter-code correlations modeled rho.beta AR parameter group effects covariance matrix rho.U0 AR parameter code effects covariance matrix rho.delta AR parameter code-site effects covariance matrix sigma.rare sd error rare codes (usually larger sigma.eps.1 sigma.eps.2) n.rare number rare codes group.size size group","code":""},{"path":"https://github.com/celehs/MUGS/reference/DataGen_rare_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function used to generate input data (used only for Simulations) Generate SPPMIs, dummy matrices based on prior group structures, and code-code pairs for tuning and evaluation — DataGen_rare_group","text":"Returns input data, SPPMIs, dummy matrices based prior group structures code-code pairs tuning evaluation","code":""},{"path":"https://github.com/celehs/MUGS/reference/evaluation.sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Used For Tuning And Evaluation — evaluation.sim","title":"Function Used For Tuning And Evaluation — evaluation.sim","text":"Function Used Tuning Evaluation","code":""},{"path":"https://github.com/celehs/MUGS/reference/evaluation.sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Used For Tuning And Evaluation — evaluation.sim","text":"","code":"evaluation.sim(pairs.rel, U)"},{"path":"https://github.com/celehs/MUGS/reference/evaluation.sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Used For Tuning And Evaluation — evaluation.sim","text":"pairs.rel known code-code pairs U code embedding matrix","code":""},{"path":"https://github.com/celehs/MUGS/reference/evaluation.sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function Used For Tuning And Evaluation — evaluation.sim","text":"output tuning evaluation","code":""},{"path":"https://github.com/celehs/MUGS/reference/get_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Function For Getting Embedding From SVD — get_embed","title":"Function For Getting Embedding From SVD — get_embed","text":"Function Getting Embedding SVD","code":""},{"path":"https://github.com/celehs/MUGS/reference/get_embed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function For Getting Embedding From SVD — get_embed","text":"","code":"get_embed(mysvd, d = 2000, normalize = TRUE)"},{"path":"https://github.com/celehs/MUGS/reference/get_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function For Getting Embedding From SVD — get_embed","text":"mysvd (managed) svd result (adding element 'names') d dim final embedding normalize output embeddings l2 norm equal 1","code":""},{"path":"https://github.com/celehs/MUGS/reference/get_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function For Getting Embedding From SVD — get_embed","text":"embedding SVD","code":""},{"path":"https://github.com/celehs/MUGS/reference/GroupEff_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Used To Estimate Group Effects Parallelly — GroupEff_par","title":"Function Used To Estimate Group Effects Parallelly — GroupEff_par","text":"Function Used Estimate Group Effects Parallelly","code":""},{"path":"https://github.com/celehs/MUGS/reference/GroupEff_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Used To Estimate Group Effects Parallelly — GroupEff_par","text":"","code":"GroupEff_par(   S.MGB,   S.BCH,   n.MGB,   n.BCH,   U.MGB,   U.BCH,   V.MGB,   V.BCH,   X.MGB.group,   X.BCH.group,   n.group,   name.list,   beta.int,   lambda = 0,   p,   n.core )"},{"path":"https://github.com/celehs/MUGS/reference/GroupEff_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Used To Estimate Group Effects Parallelly — GroupEff_par","text":"S.MGB SPPMI source site S.BCH SPPMI target site n.MGB number codes source site n.BCH number codes target site U.MGB left embeddings (left singular vectors times square root singular values) source site U.BCH left embeddings (left singular vectors times square root singular values) target site V.MGB right embeddings (right singular vectors times square root singular values) source site V.BCH right embeddings (right singular vectors times square root singular values) target site X.MGB.group dummy matrix based prior group structures source site X.BCH.group dummy matrix based prior group structures target site n.group number groups name.list full list code names source site target site repeated names overlapping codes beta.int initial estimator group effects lambda tuning parameter controls intensity penalization group effect; default set 0 p length embedding n.core number cored used parallel computation","code":""},{"path":"https://github.com/celehs/MUGS/reference/GroupEff_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function Used To Estimate Group Effects Parallelly — GroupEff_par","text":"output estimating group effects parallelly","code":""},{"path":"https://github.com/celehs/MUGS/reference/MUGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for MUGS algorithm — MUGS","title":"Main function for MUGS algorithm — MUGS","text":"Main function MUGS algorithm","code":""},{"path":"https://github.com/celehs/MUGS/reference/MUGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for MUGS algorithm — MUGS","text":"","code":"MUGS(   TUNE = F,   Eva = T,   Lambda = c(10),   Lambda.delta = c(1000),   n.core = 4,   tol = 1,   seed = 1,   S.1 = NULL,   S.2 = NULL,   X.group.source = NULL,   X.group.target = NULL,   pairs.rel.CV = NULL,   pairs.rel.EV = NULL,   p = 100,   n.group = 400 )"},{"path":"https://github.com/celehs/MUGS/reference/MUGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for MUGS algorithm — MUGS","text":"TUNE Logical value indicating whether function tune parameters 'TRUE' use predefined parameters 'FALSE'. Eva Logical value indicating whether perform evaluation (TRUE) skip (FALSE). Lambda candidate values tuning parameter controls intensity penalization code effects. Lambda.delta candidate values tuning parameter controls intensity penalization code-site effects. n.core Integer specifying number cores use parallel processing. tol Numeric value representing tolerance level convergence algorithm. seed Integer used set seed random number generation, ensuring reproducibility simulated data stochastic process within algorithm. S.1 SPPMI matrix site 1. S.2 SPPMI matrix site 2. X.group.source dummy matrix group structure codes site 1. X.group.target dummy matrix group structure codes site 2. pairs.rel.CV Code-code pairs used tuning via cross validation pairs.rel.EV Code-code pairs used evaluation p Integer indicating length embeddings. n.group number groups.","code":""},{"path":"https://github.com/celehs/MUGS/reference/MUGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for MUGS algorithm — MUGS","text":"final result","code":""},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.CV.html","id":null,"dir":"Reference","previous_headings":"","what":"pairs.rel.CV Dataset — pairs.rel.CV","title":"pairs.rel.CV Dataset — pairs.rel.CV","text":"data frame containing cross-validation pairs relative comparisons.","code":""},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.CV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pairs.rel.CV Dataset — pairs.rel.CV","text":"","code":"pairs.rel.CV"},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.CV.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pairs.rel.CV Dataset — pairs.rel.CV","text":"data frame multiple columns: col Integer representing column index pair. row Integer representing row index pair. type Character string indicating type data (e.g., \"train\", \"test\").","code":""},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.EV.html","id":null,"dir":"Reference","previous_headings":"","what":"pairs.rel.EV Dataset — pairs.rel.EV","title":"pairs.rel.EV Dataset — pairs.rel.EV","text":"data frame containing evaluation pairs relative comparisons.","code":""},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.EV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pairs.rel.EV Dataset — pairs.rel.EV","text":"","code":"pairs.rel.EV"},{"path":"https://github.com/celehs/MUGS/reference/pairs.rel.EV.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pairs.rel.EV Dataset — pairs.rel.EV","text":"data frame multiple columns: col Integer representing column index pair. row Integer representing row index pair. type Character string indicating type data (e.g., \"validation\").","code":""},{"path":"https://github.com/celehs/MUGS/reference/S.1.html","id":null,"dir":"Reference","previous_headings":"","what":"S.1 Dataset — S.1","title":"S.1 Dataset — S.1","text":"matrix containing SPPMI data source site. dataset used input analysis package.","code":""},{"path":"https://github.com/celehs/MUGS/reference/S.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S.1 Dataset — S.1","text":"","code":"S.1"},{"path":"https://github.com/celehs/MUGS/reference/S.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S.1 Dataset — S.1","text":"matrix 2000 rows 10 columns: Row Names Unique identifiers row. Columns Numeric values representing SPPMI data.","code":""},{"path":"https://github.com/celehs/MUGS/reference/S.2.html","id":null,"dir":"Reference","previous_headings":"","what":"S.2 Dataset — S.2","title":"S.2 Dataset — S.2","text":"matrix containing SPPMI data target site. dataset used input analysis package.","code":""},{"path":"https://github.com/celehs/MUGS/reference/S.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S.2 Dataset — S.2","text":"","code":"S.2"},{"path":"https://github.com/celehs/MUGS/reference/S.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S.2 Dataset — S.2","text":"matrix 2000 rows 10 columns: Row Names Unique identifiers row. Columns Numeric values representing SPPMI data.","code":""},{"path":"https://github.com/celehs/MUGS/reference/U.1.html","id":null,"dir":"Reference","previous_headings":"","what":"U.1 Dataset — U.1","title":"U.1 Dataset — U.1","text":"matrix containing left embeddings source site. embeddings used embedding-based computations.","code":""},{"path":"https://github.com/celehs/MUGS/reference/U.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.1 Dataset — U.1","text":"","code":"U.1"},{"path":"https://github.com/celehs/MUGS/reference/U.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.1 Dataset — U.1","text":"matrix 2000 rows 10 columns: Row Names Unique identifiers row. Columns Numeric values representing embeddings.","code":""},{"path":"https://github.com/celehs/MUGS/reference/U.2.html","id":null,"dir":"Reference","previous_headings":"","what":"U.2 Dataset — U.2","title":"U.2 Dataset — U.2","text":"matrix containing left embeddings target site. embeddings used embedding-based computations.","code":""},{"path":"https://github.com/celehs/MUGS/reference/U.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.2 Dataset — U.2","text":"","code":"U.2"},{"path":"https://github.com/celehs/MUGS/reference/U.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.2 Dataset — U.2","text":"matrix 2000 rows 10 columns: Row Names Unique identifiers row. Columns Numeric values representing embeddings.","code":""},{"path":"https://github.com/celehs/MUGS/reference/X.group.source.html","id":null,"dir":"Reference","previous_headings":"","what":"X.group.source Dataset — X.group.source","title":"X.group.source Dataset — X.group.source","text":"matrix containing group structures source site. represents binary group membership entities source.","code":""},{"path":"https://github.com/celehs/MUGS/reference/X.group.source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X.group.source Dataset — X.group.source","text":"","code":"X.group.source"},{"path":"https://github.com/celehs/MUGS/reference/X.group.source.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"X.group.source Dataset — X.group.source","text":"matrix 2000 rows 50 columns: Rows Entities source site. Columns Binary values (0 1) indicating group membership.","code":""},{"path":"https://github.com/celehs/MUGS/reference/X.group.target.html","id":null,"dir":"Reference","previous_headings":"","what":"X.group.target Dataset — X.group.target","title":"X.group.target Dataset — X.group.target","text":"matrix containing group structures target site. represents binary group membership entities target.","code":""},{"path":"https://github.com/celehs/MUGS/reference/X.group.target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X.group.target Dataset — X.group.target","text":"","code":"X.group.target"},{"path":"https://github.com/celehs/MUGS/reference/X.group.target.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"X.group.target Dataset — X.group.target","text":"matrix 2000 rows 50 columns: Rows Entities target site. Columns Binary values (0 1) indicating group membership.","code":""}]
